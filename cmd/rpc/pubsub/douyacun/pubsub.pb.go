// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pubsub.proto

package douyacun

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Topic struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Topic) Reset()         { *m = Topic{} }
func (m *Topic) String() string { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()    {}
func (*Topic) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{0}
}

func (m *Topic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Topic.Unmarshal(m, b)
}
func (m *Topic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Topic.Marshal(b, m, deterministic)
}
func (m *Topic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Topic.Merge(m, src)
}
func (m *Topic) XXX_Size() int {
	return xxx_messageInfo_Topic.Size(m)
}
func (m *Topic) XXX_DiscardUnknown() {
	xxx_messageInfo_Topic.DiscardUnknown(m)
}

var xxx_messageInfo_Topic proto.InternalMessageInfo

func (m *Topic) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PubsubMessage struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubsubMessage) Reset()         { *m = PubsubMessage{} }
func (m *PubsubMessage) String() string { return proto.CompactTextString(m) }
func (*PubsubMessage) ProtoMessage()    {}
func (*PubsubMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{1}
}

func (m *PubsubMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubsubMessage.Unmarshal(m, b)
}
func (m *PubsubMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubsubMessage.Marshal(b, m, deterministic)
}
func (m *PubsubMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubsubMessage.Merge(m, src)
}
func (m *PubsubMessage) XXX_Size() int {
	return xxx_messageInfo_PubsubMessage.Size(m)
}
func (m *PubsubMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PubsubMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PubsubMessage proto.InternalMessageInfo

func (m *PubsubMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PublishRequest struct {
	Topic                *Topic         `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Messages             *PubsubMessage `protobuf:"bytes,2,opt,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PublishRequest) Reset()         { *m = PublishRequest{} }
func (m *PublishRequest) String() string { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()    {}
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{2}
}

func (m *PublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishRequest.Unmarshal(m, b)
}
func (m *PublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishRequest.Marshal(b, m, deterministic)
}
func (m *PublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishRequest.Merge(m, src)
}
func (m *PublishRequest) XXX_Size() int {
	return xxx_messageInfo_PublishRequest.Size(m)
}
func (m *PublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishRequest proto.InternalMessageInfo

func (m *PublishRequest) GetTopic() *Topic {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *PublishRequest) GetMessages() *PubsubMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

type PublishResponse struct {
	MessageId            uint64   `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishResponse) Reset()         { *m = PublishResponse{} }
func (m *PublishResponse) String() string { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()    {}
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{3}
}

func (m *PublishResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResponse.Unmarshal(m, b)
}
func (m *PublishResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResponse.Marshal(b, m, deterministic)
}
func (m *PublishResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResponse.Merge(m, src)
}
func (m *PublishResponse) XXX_Size() int {
	return xxx_messageInfo_PublishResponse.Size(m)
}
func (m *PublishResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResponse proto.InternalMessageInfo

func (m *PublishResponse) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func init() {
	proto.RegisterType((*Topic)(nil), "douyacun.Topic")
	proto.RegisterType((*PubsubMessage)(nil), "douyacun.PubsubMessage")
	proto.RegisterType((*PublishRequest)(nil), "douyacun.PublishRequest")
	proto.RegisterType((*PublishResponse)(nil), "douyacun.PublishResponse")
}

func init() { proto.RegisterFile("pubsub.proto", fileDescriptor_91df006b05e20cf7) }

var fileDescriptor_91df006b05e20cf7 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x89, 0xb4, 0xda, 0x8c, 0xd5, 0xc2, 0x5c, 0x8c, 0x15, 0x41, 0x22, 0x82, 0xa7, 0x50,
	0xda, 0x83, 0x37, 0xef, 0x1e, 0x84, 0xb2, 0x7a, 0x97, 0xdd, 0x64, 0xd0, 0x85, 0x36, 0xbb, 0x66,
	0x76, 0x0f, 0xde, 0xfd, 0xe1, 0xd2, 0xe9, 0x5a, 0x8d, 0xd8, 0xdb, 0x24, 0xef, 0x9b, 0xf9, 0x78,
	0x0b, 0x63, 0x1f, 0x0d, 0x47, 0x53, 0xf9, 0xce, 0x05, 0x87, 0xa3, 0xc6, 0xc5, 0x0f, 0x5d, 0xc7,
	0xb6, 0xbc, 0x80, 0xe1, 0xb3, 0xf3, 0xb6, 0x46, 0x84, 0x41, 0xab, 0xd7, 0x54, 0x64, 0x57, 0xd9,
	0x6d, 0xae, 0x64, 0x2e, 0xaf, 0xe1, 0x64, 0x29, 0x6b, 0x8f, 0xc4, 0xac, 0x5f, 0x69, 0x03, 0x35,
	0x3a, 0x68, 0x81, 0xc6, 0x4a, 0xe6, 0x72, 0x05, 0xa7, 0xcb, 0x68, 0x56, 0x96, 0xdf, 0x14, 0xbd,
	0x47, 0xe2, 0x80, 0x37, 0x30, 0x0c, 0x9b, 0x9b, 0x82, 0x1d, 0xcf, 0x27, 0xd5, 0xb7, 0xad, 0x12,
	0x95, 0xda, 0xa6, 0xb8, 0x80, 0xd1, 0x7a, 0x7b, 0x97, 0x8b, 0x03, 0x21, 0xcf, 0x7e, 0xc8, 0x9e,
	0x57, 0xed, 0xc0, 0x72, 0x06, 0x93, 0x9d, 0x8d, 0xbd, 0x6b, 0x99, 0xf0, 0x12, 0x20, 0xc5, 0x2f,
	0xb6, 0x11, 0xe7, 0x40, 0xe5, 0xe9, 0xcf, 0x43, 0x33, 0xff, 0xcc, 0x20, 0x4f, 0x2b, 0xd4, 0xe1,
	0x3d, 0x1c, 0xa5, 0x0f, 0x2c, 0x7a, 0xb6, 0x5f, 0x05, 0xa6, 0xe7, 0xff, 0x24, 0x49, 0x76, 0x07,
	0xf9, 0x53, 0x34, 0x5c, 0x77, 0xd6, 0x10, 0xfe, 0x6d, 0x36, 0xdd, 0x57, 0x60, 0x96, 0x99, 0x43,
	0x79, 0xf9, 0xc5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0x9d, 0x4b, 0xa7, 0x89, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublisherClient is the client API for Publisher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublisherClient interface {
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
	Subscribe(ctx context.Context, in *Topic, opts ...grpc.CallOption) (Publisher_SubscribeClient, error)
}

type publisherClient struct {
	cc *grpc.ClientConn
}

func NewPublisherClient(cc *grpc.ClientConn) PublisherClient {
	return &publisherClient{cc}
}

func (c *publisherClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/douyacun.Publisher/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publisherClient) Subscribe(ctx context.Context, in *Topic, opts ...grpc.CallOption) (Publisher_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Publisher_serviceDesc.Streams[0], "/douyacun.Publisher/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &publisherSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Publisher_SubscribeClient interface {
	Recv() (*PubsubMessage, error)
	grpc.ClientStream
}

type publisherSubscribeClient struct {
	grpc.ClientStream
}

func (x *publisherSubscribeClient) Recv() (*PubsubMessage, error) {
	m := new(PubsubMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PublisherServer is the server API for Publisher service.
type PublisherServer interface {
	Publish(context.Context, *PublishRequest) (*PublishResponse, error)
	Subscribe(*Topic, Publisher_SubscribeServer) error
}

// UnimplementedPublisherServer can be embedded to have forward compatible implementations.
type UnimplementedPublisherServer struct {
}

func (*UnimplementedPublisherServer) Publish(ctx context.Context, req *PublishRequest) (*PublishResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Publish not implemented")
}
func (*UnimplementedPublisherServer) Subscribe(req *Topic, srv Publisher_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterPublisherServer(s *grpc.Server, srv PublisherServer) {
	s.RegisterService(&_Publisher_serviceDesc, srv)
}

func _Publisher_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublisherServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/douyacun.Publisher/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublisherServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Publisher_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Topic)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PublisherServer).Subscribe(m, &publisherSubscribeServer{stream})
}

type Publisher_SubscribeServer interface {
	Send(*PubsubMessage) error
	grpc.ServerStream
}

type publisherSubscribeServer struct {
	grpc.ServerStream
}

func (x *publisherSubscribeServer) Send(m *PubsubMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _Publisher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "douyacun.Publisher",
	HandlerType: (*PublisherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Publish",
			Handler:    _Publisher_Publish_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _Publisher_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pubsub.proto",
}
